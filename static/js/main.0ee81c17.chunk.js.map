{"version":3,"sources":["components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Form","props","useState","name","setName","number","setNumber","clearForm","onSubmit","event","preventDefault","type","pattern","title","required","value","onChange","e","target","className","disabled","Filter","ContactList","contacts","deleteContact","map","id","onClick","App","initialContacts","setContacts","filter","setFilter","some","elm","console","log","alert","contact","shortId","generate","prev","toLowerCase","includes","toLocaleLowerCase","contactId","contactsAfterDel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAyDeA,MArDf,SAAcC,GAEV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KASMC,EAAY,WACdH,EAAQ,IACRE,EAAU,KAId,OACI,gCACI,kCACI,uBAAME,SAhBG,SAAAC,GACjBA,EAAMC,iBACNT,EAAMO,SAAS,CAAEL,OAAME,WACvBE,KAaQ,UACI,yCACI,uBACII,KAAK,OACLR,KAAK,OACLS,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,MAAOZ,EACPa,SAAU,SAAAC,GAAC,OAAIb,EAAQa,EAAEC,OAAOH,aAGxC,2CACI,uBACIJ,KAAK,MACLR,KAAK,SACLS,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,MAAOV,EACPW,SAAU,SAAAC,GAAC,OAAIX,EAAUW,EAAEC,OAAOH,aAG1C,wBAAQI,UAAU,YAAYR,KAAK,SAASS,UAAWjB,IAASE,EAAhE,sBAGR,mDC1CGgB,EAPA,SAAC,GAAD,IAAGN,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACX,yDAEI,uBAAQL,KAAK,OAAOI,MAAOA,EAAOC,SAAUA,QCarCM,EAjBK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC7B,OACI,6BACKD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACb,qBAAaqB,GAAIA,EAAjB,UACIvB,EADJ,IACWE,EACR,wBAAQM,KAAK,SACTgB,QAAS,WAAQH,EAAcE,IADnC,sBAFMA,S,+BC2HPE,MA/Cf,WACE,MAAgC1B,mBAAS2B,GAAzC,mBAAON,EAAP,KAAiBO,EAAjB,KACA,EAA4B5B,mBAAS,IAArC,mBAAO6B,EAAP,KAAeC,EAAf,KA8BA,OACE,sBAAKb,UAAU,YAAf,UACE,2CACA,cAAC,EAAD,CAAMX,SA/BS,SAAC,GAAsB,IAApBL,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAC1B,GAAIkB,EAASU,MAAK,SAAAC,GAAG,OAAIA,EAAI/B,OAASA,KACpCgC,QAAQC,IAAIC,MAAM,GAAD,OAAIlC,EAAJ,iCADnB,CAIA,IAAMmC,EAAU,CACdZ,GAAIa,IAAQC,WACZrC,OACAE,UAEFyB,GAAY,SAAAW,GAAI,OAAKH,GAAL,mBAAiBG,WAsB/B,0CACA,cAAC,EAAD,CAAQ1B,MAAOgB,EAAQf,SApBN,SAAAP,GACnBuB,EAAUvB,EAAMS,OAAOH,UAoBrB,cAAC,EAAD,CACEQ,SAlBGA,EAASQ,QAAO,SAAAO,GAAO,OAC5BA,EAAQnC,KAAKuC,cAAcC,SAASZ,EAAOa,wBAkBzCpB,cAdgB,SAAAqB,GACpB,IAAMC,EAAmBvB,EAASQ,QAAO,SAAAO,GAAO,OAAIA,EAAQZ,KAAOmB,KACnEf,EAAYgB,U,MCxGhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0ee81c17.chunk.js","sourcesContent":["\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nfunction Form(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        props.onSubmit({ name, number });\r\n        clearForm();\r\n\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <form onSubmit={handleSubmit}>\r\n                    <label>Name\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                        />\r\n                    </label>\r\n                    <label>Number\r\n                        <input\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            value={number}\r\n                            onChange={e => setNumber(e.target.value)}\r\n                        />\r\n                    </label>\r\n                    <button className=\"btnSubmit\" type='submit' disabled={!name || !number}>Add</button>\r\n                </form>\r\n            </section>\r\n            <section>Contacts\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n\r\n\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    < label >\r\n        Find contact by name\r\n        < input type=\"text\" value={value} onChange={onChange} ></input >\r\n    </label >\r\n\r\n);\r\nexport default Filter;\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};","\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n    return (\r\n        <ul>\r\n            {contacts.map(({ id, name, number }) =>\r\n            (<li key={id} id={id}>\r\n                {name}:{number}\r\n                <button type=\"button\"\r\n                    onClick={() => { deleteContact(id) }}\r\n                >Delete\r\n                </button>\r\n            </li>))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default ContactList;\r\n\r\n","// import React, { setFilter } from 'react';\n// import Form from \"./components/Form/Form\"\n// import Filter from './components/Filter/Filter';\n// import ContactList from \"./components/ContactList/ContactList\"\n// import initialContacts from \"./components/initialContacts.json\"\n\n\n// import \"./base.css\"\n// import shortId from 'shortid';\n\n\n// const App () => {\n\n//   const [contacts, setContacts] = useState(initialContacts);\n//   const [filter, setFilter] = useState('');\n\n//   const addContact = ({ name, number }) => {\n//     if (this.state.contacts.some(elm => elm.name === name)) {\n//       console.log(alert(`${name} is already in contacts`));\n//       return;\n//     }\n//     const contact = {\n//       id: shortId.generate(),\n//       name,\n//       number,\n//     };\n//     this.setState(({ contacts }) => ({\n//       contacts: [contact, ...contacts],\n//     }));\n//   };\n\n//   const changeFilter = event => {\n//     this.setState({\n//       filter: event.currentTarget.value,\n//     });\n//   };\n//   const getFilteredContacts = () => {\n//     const normalizedFilter = this.state.filter.toLowerCase();\n//     return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter)\n//     ,);\n//   };\n\n\n//   const deleteContact = contactId => {\n//     this.setState(({ contacts }) => ({\n//       contacts: contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n\n\n//   render() {\n//     const getFilteredContacts = this.getFilteredContacts();\n//     return (\n//       <div className=\"container\">\n//         <h1>Phonebook</h1>\n//         <Form onSubmit={this.addContact} />\n//         <h2>Contacts</h2>\n//         <Filter value={this.state.filter} onChange={this.changeFilter} />\n//         <ContactList\n//           contacts={getFilteredContacts}\n//           deleteContact={this.deleteContact}\n//         />\n//       </div>\n//     )\n//   }\n// }\n\n// export default App;\n\n\nimport React, { useState } from 'react';\nimport Form from \"./components/Form/Form\"\nimport Filter from './components/Filter/Filter';\nimport ContactList from \"./components/ContactList/ContactList\"\nimport initialContacts from \"./components/initialContacts.json\"\n\n\nimport \"./base.css\"\nimport shortId from 'shortid';\n\n\nfunction App() {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n\n  const addContact = ({ name, number }) => {\n    if (contacts.some(elm => elm.name === name)) {\n      console.log(alert(`${name} is already in contacts`));\n      return;\n    }\n    const contact = {\n      id: shortId.generate(),\n      name,\n      number,\n    };\n    setContacts(prev => [contact, ...prev]);\n  };\n\n  const changeFilter = event => {\n    setFilter(event.target.value);\n  };\n  const getFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase()))\n  };\n\n\n  const deleteContact = contactId => {\n    const contactsAfterDel = contacts.filter(contact => contact.id !== contactId);\n    setContacts(contactsAfterDel);\n  };\n\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <Form onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getFilteredContacts()}\n        deleteContact={deleteContact}\n      />\n    </div>\n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}